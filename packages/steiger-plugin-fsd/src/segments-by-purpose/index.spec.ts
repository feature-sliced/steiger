import { expect, it } from 'vitest'

import segmentsByPurpose from './index.js'
import { compareMessages, joinFromRoot, parseIntoFolder as parseIntoFsdRoot } from '@steiger/toolkit'

it('reports no errors on a project with good segments', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ lib
        ğŸ“„ index.ts
    ğŸ“‚ entities
      ğŸ“‚ user
        ğŸ“‚ ui
        ğŸ“‚ model
        ğŸ“„ index.ts
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  expect(segmentsByPurpose.check(root)).toEqual({ diagnostics: [] })
})

it('reports errors on a project with bad segments', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ modals
        ğŸ“„ index.ts
      ğŸ“‚ hooks
        ğŸ“„ index.ts
      ğŸ“‚ helpers
        ğŸ“„ index.ts
      ğŸ“‚ utils
        ğŸ“„ index.ts
    ğŸ“‚ entities
      ğŸ“‚ user
        ğŸ“‚ components
        ğŸ“‚ model
        ğŸ“„ index.ts
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  const diagnostics = segmentsByPurpose.check(root).diagnostics.sort(compareMessages)
  expect(diagnostics).toEqual([
    {
      message: "This segment's name should describe the purpose of its contents, not what the contents are.",
      location: { path: joinFromRoot('entities', 'user', 'components') },
    },
    {
      message: "This segment's name should describe the purpose of its contents, not what the contents are.",
      location: { path: joinFromRoot('shared', 'helpers') },
    },
    {
      message: "This segment's name should describe the purpose of its contents, not what the contents are.",
      location: { path: joinFromRoot('shared', 'hooks') },
    },
    {
      message: "This segment's name should describe the purpose of its contents, not what the contents are.",
      location: { path: joinFromRoot('shared', 'modals') },
    },
    {
      message: "This segment's name should describe the purpose of its contents, not what the contents are.",
      location: { path: joinFromRoot('shared', 'utils') },
    },
  ])
})
