import { expect, it } from 'vitest'

import repetitiveNaming from './index.js'
import { compareMessages, joinFromRoot, parseIntoFolder as parseIntoFsdRoot } from '@steiger/toolkit'

it('reports no errors on a project with no repetitive words in slices', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ about
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ contact
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  expect(repetitiveNaming.check(root)).toEqual({ diagnostics: [] })
})

it('reports errors on a project with repetition of "page"', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ pages
      ğŸ“‚ homePage
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ aboutPage
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ contactPage
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  const diagnostics = repetitiveNaming.check(root).diagnostics.sort(compareMessages)
  expect(diagnostics).toEqual([
    { message: 'Repetitive word "page" in slice names.', location: { path: joinFromRoot('pages') } },
  ])
})

it('recognizes words in different naming conventions', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ entities
      ğŸ“‚ ClientFolder
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ provider-folder
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ service_folder
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  const diagnostics = repetitiveNaming.check(root).diagnostics.sort(compareMessages)
  expect(diagnostics).toEqual([
    { message: 'Repetitive word "folder" in slice names.', location: { path: joinFromRoot('entities') } },
  ])
})

it('does not complain about layers with just one slice', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ pages
      ğŸ“‚ create-post
        ğŸ“‚ ui
          ğŸ“„ index.tsx
        ğŸ“„ index.ts
      ğŸ“‚ home
        ğŸ“‚ ui
          ğŸ“„ index.tsx
        ğŸ“„ index.ts
      ğŸ“‚ post
        ğŸ“‚ ui
          ğŸ“„ index.tsx
        ğŸ“„ index.ts
    ğŸ“‚ features
      ğŸ“‚ create-post
        ğŸ“‚ api
        ğŸ“‚ ui
          ğŸ“„ index.tsx
        ğŸ“„ index.ts
    ğŸ“‚ entities
      ğŸ“‚ post
        ğŸ“‚ api
        ğŸ“‚ model
        ğŸ“‚ ui
          ğŸ“„ index.tsx
        ğŸ“„ index.ts
  `)

  expect(repetitiveNaming.check(root)).toEqual({ diagnostics: [] })
})
