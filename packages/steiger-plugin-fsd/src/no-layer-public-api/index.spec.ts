import { expect, it } from 'vitest'

import noLayerPublicApi from './index.js'
import { joinFromRoot, parseIntoFolder as parseIntoFsdRoot } from '@steiger/toolkit/test'

it('reports no errors on a project without index files on layer level', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ lib
        ğŸ“„ index.ts
    ğŸ“‚ entities
      ğŸ“‚ user
        ğŸ“‚ ui
        ğŸ“‚ model
        ğŸ“„ index.ts
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.ts
  `)

  expect(noLayerPublicApi.check(root)).toEqual({ diagnostics: [] })
})

it('reports errors on a project with index files on layer level', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“„ index.ts
    ğŸ“‚ entities
      ğŸ“‚ user
        ğŸ“‚ ui
        ğŸ“„ index.ts
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ editor
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“„ index.ts
    ğŸ“‚ app
      ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“„ index.ts
  `)

  const diagnostics = noLayerPublicApi.check(root).diagnostics
  expect(diagnostics).toEqual([
    { message: 'Layer "shared" should not have an index file', location: { path: joinFromRoot('shared', 'index.ts') } },
    { message: 'Layer "pages" should not have an index file', location: { path: joinFromRoot('pages', 'index.ts') } },
  ])
})

it('reports errors on a project with multiple index files on layer level', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
        ğŸ“„ index.js
      ğŸ“„ index.js
    ğŸ“‚ entities
      ğŸ“‚ user
        ğŸ“‚ ui
        ğŸ“„ index.js
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.js
      ğŸ“‚ editor
        ğŸ“‚ ui
        ğŸ“„ index.ts
        ğŸ“„ index.js
      ğŸ“„ index.client.js
      ğŸ“„ index.server.js
  `)

  const diagnostics = noLayerPublicApi.check(root).diagnostics
  expect(diagnostics).toEqual([
    { message: 'Layer "shared" should not have an index file', location: { path: joinFromRoot('shared', 'index.js') } },
    {
      message: 'Layer "pages" should not have an index file',
      location: { path: joinFromRoot('pages', 'index.client.js') },
    },
    {
      message: 'Layer "pages" should not have an index file',
      location: { path: joinFromRoot('pages', 'index.server.js') },
    },
  ])
})

it('reports no errors on a project with multiple index files in valid locations', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.js
      ğŸ“‚ lib
        ğŸ“„ index.js
    ğŸ“‚ entities
      ğŸ“‚ user
        ğŸ“‚ ui
        ğŸ“„ index.js
    ğŸ“‚ pages
      ğŸ“‚ home
        ğŸ“‚ ui
        ğŸ“„ index.client.js
        ğŸ“„ index.server.js
      ğŸ“‚ editor
        ğŸ“‚ ui
        ğŸ“„ index.js
  `)

  expect(noLayerPublicApi.check(root)).toEqual({ diagnostics: [] })
})
