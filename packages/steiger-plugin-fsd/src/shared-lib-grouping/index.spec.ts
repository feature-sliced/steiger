import { expect, it } from 'vitest'

import { joinFromRoot, parseIntoFsdRoot } from '../_lib/prepare-test.js'
import excessiveSlicing from './index.js'

it('reports no errors on projects with no shared/lib', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ entities
      ğŸ“‚ users
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ posts
        ğŸ“‚ ui
        ğŸ“„ index.ts
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
        ğŸ“„ Button.tsx
  `)

  const { diagnostics } = excessiveSlicing.check(root)

  expect(diagnostics).toEqual([])
})

it('reports no errors on projects with shared/lib below threshold', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ entities
      ğŸ“‚ users
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ posts
        ğŸ“‚ ui
        ğŸ“„ index.ts
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
        ğŸ“„ Button.tsx
      ğŸ“‚ lib
        ğŸ“„ index.ts
        ğŸ“„ dates.ts
        ğŸ“„ collections.ts
  `)

  const { diagnostics } = excessiveSlicing.check(root)

  expect(diagnostics).toEqual([])
})

it('reports errors on a project with shared/lib above threshold', () => {
  const root = parseIntoFsdRoot(`
    ğŸ“‚ entities
      ğŸ“‚ users
        ğŸ“‚ ui
        ğŸ“„ index.ts
      ğŸ“‚ posts
        ğŸ“‚ ui
        ğŸ“„ index.ts
    ğŸ“‚ shared
      ğŸ“‚ ui
        ğŸ“„ index.ts
        ğŸ“„ Button.tsx
      ğŸ“‚ lib
        ğŸ“„ index.ts
        ğŸ“„ dates.ts
        ğŸ“„ collections.ts
        ğŸ“„ utils.ts
        ğŸ“„ helpers.ts
        ğŸ“„ constants.ts
        ğŸ“„ types.ts
        ğŸ“„ api.ts
        ğŸ“„ hooks.ts
        ğŸ“„ selectors.ts
        ğŸ“„ actions.ts
        ğŸ“„ reducers.ts
        ğŸ“„ sagas.ts
        ğŸ“„ middleware.ts
        ğŸ“„ components.ts
        ğŸ“„ hell.ts
        ğŸ“„ is.ts
        ğŸ“„ other.ts
        ğŸ“„ people.ts
  `)

  const { diagnostics } = excessiveSlicing.check(root)

  expect(diagnostics).toEqual([
    {
      message: 'Shared/lib has 19 modules, which is above the recommended threshold of 15. Consider grouping them.',
      location: { path: joinFromRoot('shared', 'lib') },
    },
  ])
})
