import { describe, expect, it } from 'vitest'

import noSegmentsOnSlicedLayers from './index.js'
import { joinFromRoot, parseIntoFsdRoot } from '../_lib/prepare-test.js'

describe('no-segments-on-sliced-layers rule', () => {
  it('reports no errors on a project where the sliced layers has no segments in direct children', () => {
    const root = parseIntoFsdRoot(`
      ğŸ“‚ shared
        ğŸ“‚ ui
          ğŸ“„ index.ts
        ğŸ“‚ i18n
          ğŸ“„ index.ts
      ğŸ“‚ entities
        ğŸ“‚ user
          ğŸ“‚ ui
            ğŸ“„ Name.tsx
          ğŸ“‚ api
            ğŸ“„ useCurrentUser.ts
          ğŸ“„ index.ts
        ğŸ“‚ document
          ğŸ“‚ api
            ğŸ“„ useDocument.ts
      ğŸ“‚ pages
        ğŸ“‚ home
          ğŸ“‚ ui
          ğŸ“„ index.ts
    `)

    console.log(noSegmentsOnSlicedLayers.check(root))

    expect(noSegmentsOnSlicedLayers.check(root)).toEqual({ diagnostics: [] })
  })

  it('reports errors on a project where the "Entities" layer has segments in direct children', () => {
    const root = parseIntoFsdRoot(`
      ğŸ“‚ shared
        ğŸ“‚ ui
          ğŸ“„ index.ts
        ğŸ“‚ i18n
          ğŸ“„ index.ts
      ğŸ“‚ entities
        ğŸ“‚ user
          ğŸ“„ index.ts
          ğŸ“„ Name.tsx
        ğŸ“‚ ui
          ğŸ“„ index.ts
      ğŸ“‚ features
        ğŸ“‚ user
          ğŸ“‚ ui
            ğŸ“„ LogIn.tsx
            ğŸ“„ index.ts
          ğŸ“„ index.ts
        ğŸ“‚ api
          ğŸ“„ index.ts
      ğŸ“‚ widgets
        ğŸ“‚ footer
          ğŸ“‚ ui
            ğŸ“„ Footer.tsx
            ğŸ“„ index.ts
          ğŸ“„ index.ts
        ğŸ“‚ config
          ğŸ“„ index.ts
      ğŸ“‚ pages
        ğŸ“‚ home
          ğŸ“‚ ui
          ğŸ“„ index.ts
        ğŸ“‚ settings
          ğŸ“‚ profile
            ğŸ“„ ProfilePage.tsx
            ğŸ“„ index.ts
        ğŸ“‚ lib
          ğŸ“„ index.ts
    `)

    const diagnostics = noSegmentsOnSlicedLayers.check(root).diagnostics
    console.log(diagnostics)
    expect(diagnostics).toEqual([
      {
        message:
          'Conventional segment "ui" found as a direct child of a sliced layer. Consider moving it inside a slice or to another layer.',
        location: { path: joinFromRoot('entities', 'ui') },
      },
      {
        message:
          'Conventional segment "api" found as a direct child of a sliced layer. Consider moving it inside a slice or to another layer.',
        location: { path: joinFromRoot('features', 'api') },
      },
      {
        message:
          'Conventional segment "config" found as a direct child of a sliced layer. Consider moving it inside a slice or to another layer.',
        location: { path: joinFromRoot('widgets', 'config') },
      },
      {
        message:
          'Conventional segment "lib" found as a direct child of a sliced layer. Consider moving it inside a slice or to another layer.',
        location: { path: joinFromRoot('pages', 'lib') },
      },
    ])
  })
})
