import { basename } from 'node:path'
import { test, expect } from 'vitest'

import { joinFromRoot, parseIntoFolder } from '../prepare-test.js'
import { findAllRecursively } from '../find-all-recursively.js'

test('findAllRecursively', () => {
  const root = parseIntoFolder(`
      ðŸ“‚ folder1
        ðŸ“‚ directory1
          ðŸ“„ styles.ts
          ðŸ“„ Button.tsx
          ðŸ“„ TextField.tsx
          ðŸ“„ index.ts
      ðŸ“‚ folder2
        ðŸ“‚ folder3
          ðŸ“‚ directory2
            ðŸ“„ CommentCard.tsx
          ðŸ“„ index.ts
      ðŸ“‚ directory3
        ðŸ“‚ folder4
          ðŸ“‚ folder5
            ðŸ“„ styles.ts
            ðŸ“„ EditorPage.tsx
            ðŸ“„ Editor.tsx
          ðŸ“„ index.ts
    `)

  const result = findAllRecursively(
    root,
    (entry) => entry.type === 'folder' && basename(entry.path).includes('directory'),
  )

  expect(result.map((entry) => entry.path)).toEqual([
    joinFromRoot('folder1', 'directory1'),
    joinFromRoot('folder2', 'folder3', 'directory2'),
    joinFromRoot('directory3'),
  ])
})
